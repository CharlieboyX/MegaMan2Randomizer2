<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:primitives="clr-namespace:MM2RandoHost.Views.Primitives"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale">
    
    <!--TextBlock Styles-->
    <Style x:Key="Style_TextBlock_Normal" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="Style_TextBlock_FinePrint">
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="8.5"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="Style_TextBlock_FinePrintMono" BasedOn="{StaticResource Style_TextBlock_FinePrint}">
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}"/>
        <Setter Property="FontFamily" Value="Consolas,Global Monospace"/>
    </Style>

    <!--CheckBox styles-->
    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="Transparent"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#999999"/>
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource Brush_WindowBg}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style_CheckBox_Custom" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                            <Border x:Name="checkbox_decorator_border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                                    <Microsoft_Windows_Themes:BulletChrome Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Brush_TextDim}"/>
                            <Setter TargetName="checkbox_decorator_border" Property="Background" Value="{DynamicResource Brush_PanelBg_1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TabControl and TabItem styles-->
    <Style x:Key="Style_TabControl" TargetType="TabControl">
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}"/>
        <Setter Property="Background" Value="{DynamicResource Brush_PanelBg_2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush_WindowBorder}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel>
                        <TabPanel Panel.ZIndex="150" IsItemsHost="True" DockPanel.Dock="{TemplateBinding TabStripPlacement}"/>

                        <Border Panel.ZIndex="100" x:Name="ContentPanel" 
	                        BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
	                        CornerRadius="0">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
		                        ContentSource="SelectedContent" 
		                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_TabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource Brush_PanelBg_2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush_WindowBorder}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_TextNormal}" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type TabItem}">
                    <ContentPresenter>
                        <ContentPresenter.Content>
                            <TextBlock Text="{Binding}" x:Name="tabItemTextBlock" FontWeight="Bold"/>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Background="{TemplateBinding Background}"
					    CornerRadius="8,8,0,0"
                            Margin="2,0"
					    BorderThickness="{TemplateBinding Property=BorderThickness}" 
					    BorderBrush="{TemplateBinding BorderBrush}"
					    OpacityMask="{TemplateBinding OpacityMask}">
                        <ContentPresenter x:Name="ContentSite"
						    VerticalAlignment="Center"
						    HorizontalAlignment="Center"
						    ContentSource="Header"
						    RecognizesAccessKey="True"
						    Margin="8,4"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_PanelBg_2}" />
                <Setter Property="Margin" Value="0,-4,0,-1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Window style-->
    <Style x:Key="Style_CustomRestoreBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse x:Name="ellipseMinimizeButton" Visibility="Collapsed"
                                 Fill="{DynamicResource Brush_WindowBtn_Hover}"/>
                        <Border BorderThickness="1" Margin="8,14,14,8" x:Name="stroke1"
                                BorderBrush="{DynamicResource Brush_TextDim}" />
                        <Border BorderThickness="1" Margin="14,8,8,14" x:Name="stroke2"
                                BorderBrush="{DynamicResource Brush_TextDim}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="ellipseMinimizeButton" Value="Visible" />
                            <Setter Property="BorderBrush" TargetName="stroke1" Value="{DynamicResource Brush_TextNormal}"/>
                            <Setter Property="BorderBrush" TargetName="stroke2" Value="{DynamicResource Brush_TextNormal}"/>
                            <Setter Property="BorderThickness" TargetName="stroke1" Value="2"/>
                            <Setter Property="BorderThickness" TargetName="stroke2" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="Style_CustomCloseBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse x:Name="ellipseMinimizeButton" Visibility="Collapsed"
                                 Fill="{DynamicResource Brush_WindowBtn_Hover}"/>
                        <Polygon StrokeThickness="1" Margin="8" Points="0,24 24,0" x:Name="stroke1"
                                 Stroke="{DynamicResource Brush_TextDim}"/>
                        <Polygon StrokeThickness="1" Margin="8" Points="0,0 24,24" x:Name="stroke2"
                                 Stroke="{DynamicResource Brush_TextDim}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="ellipseMinimizeButton" Value="Visible" />
                            <Setter Property="Stroke" TargetName="stroke1" Value="{DynamicResource Brush_TextNormal}"/>
                            <Setter Property="Stroke" TargetName="stroke2" Value="{DynamicResource Brush_TextNormal}"/>
                            <Setter Property="StrokeThickness" TargetName="stroke1" Value="2"/>
                            <Setter Property="StrokeThickness" TargetName="stroke2" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="Style_CustomWindow" TargetType="{x:Type primitives:CustomWindow}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="{DynamicResource Brush_WindowBg}"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:CustomWindow}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="8" VerticalAlignment="Center"
                                   Style="{StaticResource Style_TextBlock_Normal}"
                                   Text="{TemplateBinding Title}"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,0,0"
                                    Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                <Button Style="{StaticResource Style_CustomRestoreBtn}" x:Name="restoreButton"/>
                                <Button Style="{StaticResource Style_CustomCloseBtn}" x:Name="closeButton"/>
                            </StackPanel>
                            <Rectangle Fill="Transparent" x:Name="windowTitleBarClickRegion"/>

                            <ContentPresenter Grid.Row="1" Grid.ColumnSpan="2"/>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>